import os
import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import PatternFill

def highlight_differences(file_path1, file_path2, output_path='differences.xlsx'):
    # Read all sheets from the two Excel files into DataFrames
    dfs1 = pd.read_excel(file_path1, sheet_name=None)
    dfs2 = pd.read_excel(file_path2, sheet_name=None)

    # Create an Excel writer
    with pd.ExcelWriter(output_path, engine='openpyxl') as writer:
        summary_data = []  # List to store summary data for each sheet

        for sheet_name in set(dfs1.keys()) | set(dfs2.keys()):
            df1 = dfs1.get(sheet_name, pd.DataFrame())
            df2 = dfs2.get(sheet_name, pd.DataFrame())

            # Find differences between DataFrames
            differences = df1.ne(df2)

            # Replace NaN values with a specific value in DataFrames
            df1 = df1.fillna('NA')
            df2 = df2.fillna('NA')

            # Write DataFrames to the sheet in Excel
            df1.to_excel(writer, sheet_name=sheet_name, index=False, startrow=0, header=True)
            df2.to_excel(writer, sheet_name=sheet_name, index=False, startrow=df1.shape[0] + 2, header=True)

            # Load the workbook
            workbook = writer.book
            sheet = workbook[sheet_name]

            # Create a PatternFill with yellow background color
            fill_yellow = PatternFill(start_color='FFFF00', end_color='FFFF00', fill_type='solid')

            # Create a PatternFill with blue background color
            fill_blue = PatternFill(start_color='0000FF', end_color='0000FF', fill_type='solid')

            # Iterate through cells where differences occur and apply the yellow background color
            for row_index in range(1, differences.shape[0] + 1):
                for col_index in range(1, differences.shape[1] + 1):
                    if differences.iat[row_index - 1, col_index - 1]:
                        sheet.cell(row=row_index + 1, column=col_index).fill = fill_yellow
                        sheet.cell(row=row_index + 1 + df1.shape[0] + 2, column=col_index).fill = fill_yellow

            # Highlight entire rows in blue for additional rows in either df1 or df2
            for row_index in range(df1.shape[0] + 1, df2.shape[0] + 1):
                sheet.cell(row=row_index + 1 + df1.shape[0] + 2, column=1).fill = fill_blue
                for col_index in range(2, df2.shape[1] + 1):
                    sheet.cell(row=row_index + 1 + df1.shape[0] + 2, column=col_index).fill = fill_blue

            # Create summary data for the sheet
            row_count_df1 = len(df1)
            row_count_df2 = len(df2)
            row_count_match = (df1 == df2).all(axis=None)
            newly_added_row_count = (df2.shape[0] - df1.shape[0]) if df2.shape[0] > df1.shape[0] else 0

            # Append summary data to the list
            summary_data.append([row_count_df1, row_count_df2, row_count_match, newly_added_row_count, sheet_name])

        # Create a summary DataFrame
        summary_df = pd.DataFrame(summary_data, columns=['Row Count DF1', 'Row Count DF2', 'Row Count Match', 'Newly Added Row Count', 'Sheet Name'])

        # Write summary DataFrame to the summary sheet in Excel
        summary_df.to_excel(writer, sheet_name='Summary', index=False)

        # Save the Excel file
        print(f"Differences highlighted and saved to '{output_path}'.")

# Example usage
path1 = 'path/to/excel1.xlsx'
path2 = 'path/to/excel2.xlsx'

highlight_differences(path1, path2)
