import pandas as pd

# Read Excel file into a dictionary of DataFrames, one for each sheet
file_path = 'path_to_your_excel_file.xlsx'
excel_data = pd.read_excel(file_path, sheet_name=None, header=None)

# Specify the columns for the join
join_columns = ['id', 'city', 'country']

# Apply the logic to each sheet and save the styled DataFrames to a new Excel file
with pd.ExcelWriter('output_highlighted.xlsx', engine='openpyxl') as writer:
    for sheet_name, sheet_df in excel_data.items():
        # Skip sheets that don't have both sections
        if 'q02' not in sheet_df[0].values or 'q03' not in sheet_df[0].values:
            continue

        # Set the first row as the header for each DataFrame
        sheet_df.columns = sheet_df.iloc[0]

        # Drop the duplicate header row
        sheet_df = sheet_df.iloc[1:]

        # Split into two DataFrames for each section
        df_q02 = sheet_df[sheet_df[0] == 'q02'].iloc[:, 1:]
        df_q03 = sheet_df[sheet_df[0] == 'q03'].iloc[:, 1:]

        # Merge or join DataFrames on the specified columns
        merged_df = pd.merge(df_q02, df_q03, how='outer', on=join_columns, indicator=True).query('_merge == "right_only"').drop('_merge', axis=1)

        # Apply styling to the DataFrame
        def highlight_unique_cells(val):
            return 'background-color: yellow' if val in df_q03.values and val not in df_q02.values else ''

        styled_df = pd.concat([df_q02, df_q03]).style.applymap(highlight_unique_cells, subset=merged_df.columns)

        # Save the styled DataFrame to the Excel file
        styled_df.to_excel(writer, sheet_name=sheet_name, index=False)
