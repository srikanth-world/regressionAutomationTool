import tkinter as tk
from tkinter import ttk
from tkcalendar import DateEntry # type: ignore

def execute_backend():
    # Replace this with the actual backend script execution logic
    print("Executing backend script...")

def get_user_inputs():
    primary_keys = primary_keys_entry.get()
    date_range_from = date_range_from_entry.get_date()
    date_range_to = date_range_to_entry.get_date()
    report_frequency = report_frequency_var.get()
    feed_name = feed_name_entry.get()
    report_script = report_script_entry.get("1.0", "end-1c")
    report_script_type = report_script_type_var.get()
    new_logic_db = new_logic_db_var.get()
    old_logic_db = old_logic_db_var.get()
    output_folder = output_folder_entry.get()

    # Displaying user inputs (replace with your logic)
    print(f"Primary Keys: {primary_keys}")
    print(f"Data Range From: {date_range_from}")
    print(f"Data Range To: {date_range_to}")
    print(f"Report Frequency: {report_frequency}")
    print(f"Feed Name: {feed_name}")
    print(f"Report Script: {report_script}")
    print(f"Report Script Type: {report_script_type}")
    print(f"New Logic DB: {new_logic_db}")
    print(f"Old Logic DB: {old_logic_db}")
    print(f"Output Folder: {output_folder}")

    # Call the backend execution function
    execute_backend()

# Create the main window
root = tk.Tk()
root.title("Regression and Comparision Tool")

# Create and place widgets in the window with left and right alignments and spaces
primary_keys_label = tk.Label(root, text="Primary Keys:")
primary_keys_label.grid(row=0, column=0, sticky="e")
primary_keys_entry = tk.Entry(root, width = 80)
primary_keys_entry.grid(row=0, column=1, sticky="w", pady=5)

date_range_from_label = tk.Label(root, text="Date range from:")
date_range_from_label.grid(row=1, column=0, sticky="e")
date_range_from_entry = DateEntry(root, date_pattern="yyyy-mm-dd", width=40)
date_range_from_entry.grid(row=1, column=1, sticky="w", pady=5)

date_range_to_label = tk.Label(root, text="To:")
date_range_to_label.grid(row=1, column=2, sticky="e")
date_range_to_entry = DateEntry(root, date_pattern="yyyy-mm-dd", width=40)
date_range_to_entry.grid(row=1, column=3, sticky="w", pady=5)

report_frequency_label = tk.Label(root, text="Report Frequency:")
report_frequency_label.grid(row=2, column=0, sticky="e")
report_frequency_var = tk.StringVar(value="")
report_frequency_dropdown = ttk.Combobox(root, textvariable=report_frequency_var, values=["Daily", "Monthly"], width=40)
report_frequency_dropdown.grid(row=2, column=1, sticky="w", pady=5)

feed_name_label = tk.Label(root, text="Feed Name:")
feed_name_label.grid(row=2, column=2, sticky="e")
feed_name_entry = tk.Entry(root, width=40)
feed_name_entry.grid(row=2, column=3, sticky="w", pady=5)

report_script_label = tk.Label(root, text="Report Script:")
report_script_label.grid(row=3, column=0, sticky="e")
report_script_entry = tk.Text(root, height=8, width=80)
report_script_entry.grid(row=3, column=1, columnspan=3, sticky="w", pady=5)

# Adjusted the placement for the next three fields
report_script_type_label = tk.Label(root, text="Report Script Type:")
report_script_type_label.grid(row=4, column=0, sticky="e")
report_script_type_var = tk.StringVar(value="")
report_script_type_dropdown = ttk.Combobox(root, textvariable=report_script_type_var, values=["xlsx", "csv", "txt"], width=30)
report_script_type_dropdown.grid(row=4, column=1, sticky="w", pady=5)

new_logic_db_label = tk.Label(root, text="New Logic DB:")
new_logic_db_label.grid(row=4, column=2, sticky="e")
new_logic_db_var = tk.StringVar(value="")
new_logic_db_dropdown = ttk.Combobox(root, textvariable=new_logic_db_var, values=["Q01", "Q02", "Q03"], width=30)
new_logic_db_dropdown.grid(row=4, column=3, sticky="w", pady=5)

old_logic_db_label = tk.Label(root, text="Old Logic DB:")
old_logic_db_label.grid(row=4, column=4, sticky="e")
old_logic_db_var = tk.StringVar(value="")
old_logic_db_dropdown = ttk.Combobox(root, textvariable=old_logic_db_var, values=["Q01", "Q02", "Q03"], width=30)
old_logic_db_dropdown.grid(row=4, column=5, sticky="w", pady=5)

output_folder_label = tk.Label(root, text="Output Folder:")
output_folder_label.grid(row=5, column=0, sticky="e")
output_folder_entry = tk.Entry(root, width=80)
output_folder_entry.grid(row=5, column=1, sticky="w", pady=5)

execute_button = tk.Button(root, text="Execute", command=get_user_inputs)
execute_button.grid(row=6, column=0, columnspan=4, pady=10)

# Start the GUI event loop
root.mainloop()
